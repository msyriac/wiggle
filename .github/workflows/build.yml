name: Build

on: [push, pull_request]

jobs:
         
  test-linux:
    name: "Run tests on Linux"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: ["3.13", "3.12", "3.11", "3.10"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      
      - name: Run Tests (Linux)
        run: |
          python -m pip install --upgrade pip setuptools wheel meson ninja meson-python numpy scipy pybind11
          python -m pip install --no-build-isolation --editable '.[test]'
          pytest --cov --cov-report html --cov-report xml --cov-report annotate -sx
          
      - uses: codecov/codecov-action@v2
        with:
          verbose: true # optional (default = false)
          
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

        
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl



  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install numpy pybind11 scipy
          python -m pip install build
          python -m build . --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist, build_wheels_macos_arm]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/


  test-linux-wheel:
    needs: [upload_pypi]
    name: "Run tests on Linux with the uploaded wheels"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: ["3.13", "3.12", "3.11", "3.10"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      
      - name: Run Tests (Linux)
        run: |
          python -m pip install --upgrade pip setuptools wheel pytest
          python -m pip install pywiggle
          pytest --pyargs pywiggle.tests
          
